{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\Projects\\\\placement-predictor\\\\client\\\\src\\\\containers\\\\TheSidebar.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CCreateElement, CSidebar, CSidebarBrand, CSidebarNav, CSidebarNavDivider, CSidebarNavTitle, CSidebarMinimizer, CSidebarNavDropdown, CSidebarNavItem } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { AuthContext } from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar savedData = JSON.parse(localStorage.getItem(\"userData\"));\nvar role = null;\n\nif (savedData) {\n  role = savedData.role;\n}\n\nvar navigation;\n\nswitch (role) {\n  case \"tpo\":\n    navigation = [{\n      _tag: \"CSidebarNavTitle\",\n      _children: [\"TPO Panel\"]\n    }, {\n      _tag: \"CSidebarNavItem\",\n      name: \"View Dashboard\",\n      to: \"/tpo/view-dashboard\",\n      icon: \"cil-control\"\n    }, {\n      _tag: \"CSidebarNavItem\",\n      name: \"View Students\",\n      to: \"/tpo/view-students\",\n      icon: \"cil-drop\"\n    }];\n    break;\n\n  case \"admin\":\n    {\n      navigation = [{\n        _tag: \"CSidebarNavTitle\",\n        _children: [\"Admin Panel\"]\n      }, {\n        _tag: \"CSidebarNavItem\",\n        name: \"View Users\",\n        to: \"/admin/view-users\",\n        icon: \"cil-drop\"\n      }, {\n        _tag: \"CSidebarNavItem\",\n        name: \"View Student Details\",\n        to: \"/admin/view-student-details\",\n        icon: \"cil-drop\"\n      }];\n      break;\n    }\n\n  default:\n    navigation = [];\n    break;\n}\n\nvar TheSidebar = function TheSidebar() {\n  _s();\n\n  var dispatch = useDispatch();\n  var auth = useContext(AuthContext);\n  var show = useSelector(function (state) {\n    return state.sidebarShow;\n  });\n\n  if (auth.isLoggedIn && auth.userRole === \"student\") {\n    show = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(CSidebar, {\n    show: show,\n    onShowChange: function onShowChange(val) {\n      return dispatch({\n        type: \"set\",\n        sidebarShow: val\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n      className: \"d-md-down-none\",\n      to: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"c-sidebar-brand-full\",\n        children: \"Placement-Predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CIcon, {\n        className: \"c-sidebar-brand-minimized\",\n        name: \"sygnet\",\n        height: 35\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n      children: /*#__PURE__*/_jsxDEV(CCreateElement, {\n        items: navigation,\n        components: {\n          CSidebarNavDivider: CSidebarNavDivider,\n          CSidebarNavDropdown: CSidebarNavDropdown,\n          CSidebarNavItem: CSidebarNavItem,\n          CSidebarNavTitle: CSidebarNavTitle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CSidebarMinimizer, {\n      className: \"c-d-md-down-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TheSidebar, \"0aNnmEsy1jFxLFYsUZQBR1TxpKg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TheSidebar;\nexport default _c2 = /*#__PURE__*/React.memo(TheSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TheSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ethan/Projects/placement-predictor/client/src/containers/TheSidebar.js"],"names":["React","useContext","useSelector","useDispatch","CCreateElement","CSidebar","CSidebarBrand","CSidebarNav","CSidebarNavDivider","CSidebarNavTitle","CSidebarMinimizer","CSidebarNavDropdown","CSidebarNavItem","CIcon","AuthContext","savedData","JSON","parse","localStorage","getItem","role","navigation","_tag","_children","name","to","icon","TheSidebar","dispatch","auth","show","state","sidebarShow","isLoggedIn","userRole","val","type","memo"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from \"@coreui/react\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\nconst savedData = JSON.parse(localStorage.getItem(\"userData\"));\r\nlet role = null;\r\nif (savedData) {\r\n  role = savedData.role;\r\n}\r\n\r\nlet navigation;\r\n\r\nswitch (role) {\r\n  case \"tpo\":\r\n    navigation = [\r\n      {\r\n        _tag: \"CSidebarNavTitle\",\r\n        _children: [\"TPO Panel\"],\r\n      },\r\n      {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: \"View Dashboard\",\r\n        to: \"/tpo/view-dashboard\",\r\n        icon: \"cil-control\",\r\n      },\r\n      {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: \"View Students\",\r\n        to: \"/tpo/view-students\",\r\n        icon: \"cil-drop\",\r\n      },\r\n    ];\r\n    break;\r\n\r\n  case \"admin\": {\r\n    navigation = [\r\n      {\r\n        _tag: \"CSidebarNavTitle\",\r\n        _children: [\"Admin Panel\"],\r\n      },\r\n      {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: \"View Users\",\r\n        to: \"/admin/view-users\",\r\n        icon: \"cil-drop\",\r\n      },\r\n      {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: \"View Student Details\",\r\n        to: \"/admin/view-student-details\",\r\n        icon: \"cil-drop\",\r\n      },\r\n    ];\r\n    break;\r\n  }\r\n\r\n  default:\r\n    navigation = [];\r\n    break;\r\n}\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useContext(AuthContext);\r\n  let show = useSelector((state) => state.sidebarShow);\r\n\r\n  if (auth.isLoggedIn && auth.userRole === \"student\") {\r\n    show = false;\r\n  }\r\n\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      onShowChange={(val) => dispatch({ type: \"set\", sidebarShow: val })}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\r\n        {/* <CIcon\r\n          className=\"c-sidebar-brand-full\"\r\n          name=\"logo-negative\"\r\n          height={35}\r\n        /> */}\r\n        <h4 className=\"c-sidebar-brand-full\">Placement-Predictor</h4>\r\n        <CIcon\r\n          className=\"c-sidebar-brand-minimized\"\r\n          name=\"sygnet\"\r\n          height={35}\r\n        />\r\n      </CSidebarBrand>\r\n      <CSidebarNav>\r\n        <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle,\r\n          }}\r\n        />\r\n      </CSidebarNav>\r\n      <CSidebarMinimizer className=\"c-d-md-down-none\" />\r\n    </CSidebar>\r\n  );\r\n};\r\n\r\nexport default React.memo(TheSidebar);\r\n"]},"metadata":{},"sourceType":"module"}