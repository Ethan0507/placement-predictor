{"ast":null,"code":"import _toConsumableArray from \"C:/Users/chinu/Desktop/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/chinu/Desktop/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/chinu/Desktop/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/chinu/Desktop/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chinu\\\\Desktop\\\\placement-predictor\\\\client\\\\src\\\\views\\\\admin\\\\ViewUsers.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { CDataTable, CBadge, CButton, CCollapse, CCardBody, CModal, CModalHeader, CModalBody, CModalFooter } from \"@coreui/react\";\nimport { AuthContext } from \"src/context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ViewUsers = function ViewUsers() {\n  _s();\n\n  //Add modal\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  var auth = useContext(AuthContext);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      db_values = _useState4[0],\n      setDBValues = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, responseData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/api/admin/\", {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \" + auth.token\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              responseData = _context.sent;\n\n            case 8:\n              if (responseData) {\n                setDBValues(responseData); //   console.log(responseData.users);\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }))();\n  }, []);\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _details = _useState6[0],\n      setDetails = _useState6[1]; // const [items, setItems] = useState(usersData)\n\n\n  var toggleDetails = function toggleDetails(index) {\n    var position = _details.indexOf(index);\n\n    var newDetails = _details.slice();\n\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [].concat(_toConsumableArray(_details), [index]);\n    }\n\n    setDetails(newDetails);\n  };\n\n  var fields = [{\n    key: \"username\",\n    _style: {\n      width: \"40%\"\n    }\n  }, {\n    key: \"password\",\n    _style: {\n      width: \"20%\"\n    }\n  }, {\n    key: \"role\",\n    _style: {\n      width: \"20%\"\n    }\n  }, {\n    key: \"show_details\",\n    label: \"\",\n    _style: {\n      width: \"1%\"\n    },\n    sorter: false,\n    filter: false\n  }];\n\n  var getBadge = function getBadge(placement_status) {\n    switch (placement_status) {\n      case \"placed\":\n        return \"success\";\n\n      case \"unplaced\":\n        return \"danger\";\n\n      default:\n        return \"primary\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CButton, {\n      shape: \"pill\",\n      color: \"info\",\n      onClick: toggle,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CModal, {\n      show: modal,\n      onClose: toggle,\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        closeButton: true,\n        children: \"Enter details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: \"Nachu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(CButton, {\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, _this), \" \", /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CDataTable, {\n      items: db_values.users,\n      fields: fields,\n      columnFilter: true,\n      tableFilter: true,\n      footer: true,\n      itemsPerPageSelect: true,\n      itemsPerPage: 5,\n      hover: true,\n      sorter: true,\n      pagination: true,\n      scopedSlots: {\n        status: function status(item) {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(CBadge, {\n              color: getBadge(item.status),\n              children: item.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, _this);\n        },\n        show_details: function show_details(item, index) {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2\",\n            children: /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"primary\",\n              variant: \"outline\",\n              shape: \"square\",\n              size: \"sm\",\n              onClick: function onClick() {\n                toggleDetails(index);\n              },\n              children: _details.includes(index) ? \"Hide\" : \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, _this);\n        },\n        details: function details(item, index) {\n          return /*#__PURE__*/_jsxDEV(CCollapse, {\n            show: _details.includes(index),\n            children: /*#__PURE__*/_jsxDEV(CCardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CButton, {\n                size: \"sm\",\n                color: \"info\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                size: \"sm\",\n                color: \"danger\",\n                className: \"ml-1\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, _this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ViewUsers, \"QpkNIEc8bIiEOuYaNAo/kdZEkIE=\");\n\n_c = ViewUsers;\nexport default ViewUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewUsers\");","map":{"version":3,"sources":["C:/Users/chinu/Desktop/placement-predictor/client/src/views/admin/ViewUsers.js"],"names":["React","useState","useContext","useEffect","CDataTable","CBadge","CButton","CCollapse","CCardBody","CModal","CModalHeader","CModalBody","CModalFooter","AuthContext","ViewUsers","modal","setModal","toggle","auth","db_values","setDBValues","fetch","method","headers","Authorization","token","response","ok","json","responseData","console","log","details","setDetails","toggleDetails","index","position","indexOf","newDetails","slice","splice","fields","key","_style","width","label","sorter","filter","getBadge","placement_status","users","status","item","show_details","includes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,UARF,EASEC,YATF,QAUO,eAVP;AAWA,SAASC,WAAT,QAA4B,0BAA5B;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB;AADsB,kBAGIb,QAAQ,CAAC,KAAD,CAHZ;AAAA;AAAA,MAGfc,KAHe;AAAA,MAGRC,QAHQ;;AAKtB,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,MAAMG,IAAI,GAAGhB,UAAU,CAACW,WAAD,CAAvB;;AATsB,mBAUWZ,QAAQ,CAAC,EAAD,CAVnB;AAAA;AAAA,MAUfkB,SAVe;AAAA,MAUJC,WAVI;;AAYtBjB,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE0BkB,KAAK,CAAC,kCAAD,EAAqC;AAC/DC,gBAAAA,MAAM,EAAE,KADuD;AAE/DC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEPC,kBAAAA,aAAa,EAAE,YAAYN,IAAI,CAACO;AAFzB;AAFsD,eAArC,CAF/B;;AAAA;AAESC,cAAAA,QAFT;;AAAA,mBAWOA,QAAQ,CAACC,EAXhB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAY0BD,QAAQ,CAACE,IAAT,EAZ1B;;AAAA;AAYKC,cAAAA,YAZL;;AAAA;AAeG,kBAAIA,YAAJ,EAAkB;AAChBT,gBAAAA,WAAW,CAACS,YAAD,CAAX,CADgB,CAEhB;AACD;;AAlBJ;AAAA;;AAAA;AAAA;AAAA;AAoBGC,cAAAA,OAAO,CAACC,GAAR;;AApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAuBD,GAxBQ,EAwBN,EAxBM,CAAT;;AAZsB,mBAsCQ9B,QAAQ,CAAC,EAAD,CAtChB;AAAA;AAAA,MAsCf+B,QAtCe;AAAA,MAsCNC,UAtCM,kBAuCtB;;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,QAAMC,QAAQ,GAAGJ,QAAO,CAACK,OAAR,CAAgBF,KAAhB,CAAjB;;AACA,QAAIG,UAAU,GAAGN,QAAO,CAACO,KAAR,EAAjB;;AACA,QAAIH,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBE,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,QAAlB,EAA4B,CAA5B;AACD,KAFD,MAEO;AACLE,MAAAA,UAAU,gCAAON,QAAP,IAAgBG,KAAhB,EAAV;AACD;;AACDF,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GATD;;AAWA,MAAMG,MAAM,GAAG,CACb;AAAEC,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAA3B,GADa,EAEb;AAAEF,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAA3B,GAFa,EAGb;AAAEF,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAvB,GAHa,EAIb;AACEF,IAAAA,GAAG,EAAE,cADP;AAEEG,IAAAA,KAAK,EAAE,EAFT;AAGEF,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHV;AAIEE,IAAAA,MAAM,EAAE,KAJV;AAKEC,IAAAA,MAAM,EAAE;AALV,GAJa,CAAf;;AAaA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,gBAAD,EAAsB;AACrC,YAAQA,gBAAR;AACE,WAAK,QAAL;AACE,eAAO,SAAP;;AACF,WAAK,UAAL;AACE,eAAO,QAAP;;AACF;AACE,eAAO,SAAP;AANJ;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAEhC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,KAAd;AAAqB,MAAA,OAAO,EAAEE,MAA9B;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,YAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EACyC,GADzC,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAEA,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAcE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEE,SAAS,CAAC+B,KADnB;AAEE,MAAA,MAAM,EAAET,MAFV;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,MAAM,MALR;AAME,MAAA,kBAAkB,MANpB;AAOE,MAAA,YAAY,EAAE,CAPhB;AAQE,MAAA,KAAK,MARP;AASE,MAAA,MAAM,MATR;AAUE,MAAA,UAAU,MAVZ;AAWE,MAAA,WAAW,EAAE;AACXU,QAAAA,MAAM,EAAE,gBAACC,IAAD;AAAA,8BACN;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEJ,QAAQ,CAACI,IAAI,CAACD,MAAN,CAAvB;AAAA,wBAAuCC,IAAI,CAACD;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADM;AAAA,SADG;AAMXE,QAAAA,YAAY,EAAE,sBAACD,IAAD,EAAOjB,KAAP,EAAiB;AAC7B,8BACE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,mCACE,QAAC,OAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,OAAO,EAAC,SAFV;AAGE,cAAA,KAAK,EAAC,QAHR;AAIE,cAAA,IAAI,EAAC,IAJP;AAKE,cAAA,OAAO,EAAE,mBAAM;AACbD,gBAAAA,aAAa,CAACC,KAAD,CAAb;AACD,eAPH;AAAA,wBASGH,QAAO,CAACsB,QAAR,CAAiBnB,KAAjB,IAA0B,MAA1B,GAAmC;AATtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF;AAeD,SAtBU;AAuBXH,QAAAA,OAAO,EAAE,iBAACoB,IAAD,EAAOjB,KAAP,EAAiB;AACxB,8BACE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEH,QAAO,CAACsB,QAAR,CAAiBnB,KAAjB,CAAjB;AAAA,mCACE,QAAC,SAAD;AAAA,sCACE,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC,IAAd;AAAmB,gBAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC,IAAd;AAAmB,gBAAA,KAAK,EAAC,QAAzB;AAAkC,gBAAA,SAAS,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF;AAYD;AApCU;AAXf;AAAA;AAAA;AAAA;AAAA,aAdF;AAAA,kBADF;AAmED,CA/ID;;GAAMrB,S;;KAAAA,S;AAiJN,eAAeA,SAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  CDataTable,\r\n  CBadge,\r\n  CButton,\r\n  CCollapse,\r\n  CCardBody,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport { AuthContext } from \"src/context/auth-context\";\r\n\r\nconst ViewUsers = () => {\r\n  //Add modal\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const auth = useContext(AuthContext);\r\n  const [db_values, setDBValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/admin/\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          },\r\n        });\r\n\r\n        let responseData;\r\n        if (response.ok) {\r\n          responseData = await response.json();\r\n        }\r\n\r\n        if (responseData) {\r\n          setDBValues(responseData);\r\n          //   console.log(responseData.users);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const [details, setDetails] = useState([]);\r\n  // const [items, setItems] = useState(usersData)\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index);\r\n    let newDetails = details.slice();\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1);\r\n    } else {\r\n      newDetails = [...details, index];\r\n    }\r\n    setDetails(newDetails);\r\n  };\r\n\r\n  const fields = [\r\n    { key: \"username\", _style: { width: \"40%\" } },\r\n    { key: \"password\", _style: { width: \"20%\" } },\r\n    { key: \"role\", _style: { width: \"20%\" } },\r\n    {\r\n      key: \"show_details\",\r\n      label: \"\",\r\n      _style: { width: \"1%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n  ];\r\n\r\n  const getBadge = (placement_status) => {\r\n    switch (placement_status) {\r\n      case \"placed\":\r\n        return \"success\";\r\n      case \"unplaced\":\r\n        return \"danger\";\r\n      default:\r\n        return \"primary\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CButton shape=\"pill\" color=\"info\" onClick={toggle}>\r\n        Add\r\n      </CButton>\r\n      <CModal show={modal} onClose={toggle}>\r\n        <CModalHeader closeButton>Enter details</CModalHeader>\r\n        <CModalBody>Nachu</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\">Add</CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CDataTable\r\n        items={db_values.users}\r\n        fields={fields}\r\n        columnFilter\r\n        tableFilter\r\n        footer\r\n        itemsPerPageSelect\r\n        itemsPerPage={5}\r\n        hover\r\n        sorter\r\n        pagination\r\n        scopedSlots={{\r\n          status: (item) => (\r\n            <td>\r\n              <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\r\n            </td>\r\n          ),\r\n          show_details: (item, index) => {\r\n            return (\r\n              <td className=\"py-2\">\r\n                <CButton\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  shape=\"square\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    toggleDetails(index);\r\n                  }}\r\n                >\r\n                  {details.includes(index) ? \"Hide\" : \"Show\"}\r\n                </CButton>\r\n              </td>\r\n            );\r\n          },\r\n          details: (item, index) => {\r\n            return (\r\n              <CCollapse show={details.includes(index)}>\r\n                <CCardBody>\r\n                  <CButton size=\"sm\" color=\"info\">\r\n                    Update\r\n                  </CButton>\r\n                  <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\r\n                    Delete\r\n                  </CButton>\r\n                </CCardBody>\r\n              </CCollapse>\r\n            );\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewUsers;\r\n"]},"metadata":{},"sourceType":"module"}