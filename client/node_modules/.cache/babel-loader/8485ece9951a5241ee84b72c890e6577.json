{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ethan/Projects/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ethan/Projects/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/ethan/Projects/placement-predictor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useCallback, useRef, useEffect } from 'react';\nexport var useHttpClient = function useHttpClient() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var activeHttpRequests = useRef([]);\n  var sendRequest = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var method,\n          body,\n          headers,\n          httpAbortCtrl,\n          response,\n          responseData,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              method = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'GET';\n              body = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n              headers = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n              setIsLoading(true);\n              httpAbortCtrl = new AbortController();\n              activeHttpRequests.current.push(httpAbortCtrl);\n              _context.prev = 6;\n              _context.next = 9;\n              return fetch(url, {\n                method: method,\n                body: body,\n                headers: headers,\n                signal: httpAbortCtrl.signal\n              });\n\n            case 9:\n              response = _context.sent;\n              _context.next = 12;\n              return response.json();\n\n            case 12:\n              responseData = _context.sent;\n\n              if (response.ok) {\n                _context.next = 15;\n                break;\n              }\n\n              throw new Error(responseData.message);\n\n            case 15:\n              activeHttpRequests.current = activeHttpRequests.current.filter(function (reqCtrl) {\n                return reqCtrl !== httpAbortCtrl;\n              });\n              setIsLoading(false);\n              return _context.abrupt(\"return\", responseData);\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](6);\n              setError(_context.t0.message);\n              setIsLoading(false);\n              throw _context.t0;\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 20]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n\n  var clearError = function clearError() {\n    setError(null);\n  };\n\n  useEffect(function () {\n    return function () {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(function (abortCtrl) {\n        return abortCtrl.abort();\n      });\n    };\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest,\n    clearError: clearError\n  };\n};\n\n_s(useHttpClient, \"5LFg9Ro/5iGJ4ehzHD/qJSt5Ojo=\");","map":{"version":3,"sources":["C:/Users/ethan/Projects/placement-predictor/client/src/hooks/http-hook.js"],"names":["useState","useCallback","useRef","useEffect","useHttpClient","isLoading","setIsLoading","error","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","ok","Error","message","filter","reqCtrl","clearError","forEach","abortCtrl","abort"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwCC,SAAxC,QAAyD,OAAzD;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACCJ,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC1BK,SAD0B;AAAA,MACfC,YADe;;AAAA,mBAEPN,QAAQ,EAFD;AAAA;AAAA,MAE1BO,KAF0B;AAAA,MAEnBC,QAFmB;;AAIjC,MAAMC,kBAAkB,GAAGP,MAAM,CAAC,EAAD,CAAjC;AAEA,MAAMQ,WAAW,GAAGT,WAAW;AAAA,wEAC7B,iBAAOU,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYC,cAAAA,MAAZ,2DAAqB,KAArB;AAA4BC,cAAAA,IAA5B,2DAAmC,IAAnC;AAAyCC,cAAAA,OAAzC,2DAAmD,EAAnD;AACER,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACMS,cAAAA,aAFR,GAEwB,IAAIC,eAAJ,EAFxB;AAGEP,cAAAA,kBAAkB,CAACQ,OAAnB,CAA2BC,IAA3B,CAAgCH,aAAhC;AAHF;AAAA;AAAA,qBAM2BI,KAAK,CAACR,GAAD,EAAM;AAChCC,gBAAAA,MAAM,EAANA,MADgC;AAEhCC,gBAAAA,IAAI,EAAJA,IAFgC;AAGhCC,gBAAAA,OAAO,EAAPA,OAHgC;AAIhCM,gBAAAA,MAAM,EAAEL,aAAa,CAACK;AAJU,eAAN,CANhC;;AAAA;AAMUC,cAAAA,QANV;AAAA;AAAA,qBAc+BA,QAAQ,CAACC,IAAT,EAd/B;;AAAA;AAcUC,cAAAA,YAdV;;AAAA,kBAgBSF,QAAQ,CAACG,EAhBlB;AAAA;AAAA;AAAA;;AAAA,oBAiBc,IAAIC,KAAJ,CAAUF,YAAY,CAACG,OAAvB,CAjBd;;AAAA;AAoBIjB,cAAAA,kBAAkB,CAACQ,OAAnB,GAA6BR,kBAAkB,CAACQ,OAAnB,CAA2BU,MAA3B,CAC3B,UAAAC,OAAO;AAAA,uBAAIA,OAAO,KAAKb,aAAhB;AAAA,eADoB,CAA7B;AAIAT,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAxBJ,+CAyBWiB,YAzBX;;AAAA;AAAA;AAAA;AA2BIf,cAAAA,QAAQ,CAAC,YAAIkB,OAAL,CAAR;AACApB,cAAAA,YAAY,CAAC,KAAD,CAAZ;AA5BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD6B;;AAAA;AAAA;AAAA;AAAA,OAiC7B,EAjC6B,CAA/B;;AAoCA,MAAMuB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBrB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACX;AACAM,MAAAA,kBAAkB,CAACQ,OAAnB,CAA2Ba,OAA3B,CAAmC,UAAAC,SAAS;AAAA,eAAIA,SAAS,CAACC,KAAV,EAAJ;AAAA,OAA5C;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SAAO;AAAE3B,IAAAA,SAAS,EAATA,SAAF;AAAaE,IAAAA,KAAK,EAALA,KAAb;AAAoBG,IAAAA,WAAW,EAAXA,WAApB;AAAiCmB,IAAAA,UAAU,EAAVA;AAAjC,GAAP;AACD,CAtDM;;GAAMzB,a","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n            throw new Error(responseData.message);\r\n          }\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};"]},"metadata":{},"sourceType":"module"}